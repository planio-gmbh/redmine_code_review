$('#code_review').html('<%= j render partial: 'update_diff_view' %>');

var is_readonly = <%= !authorize_for('code_reviews', 'new') %>;
var is_diff = <%= !!(@action_type == 'diff' or (@attachment and @attachment.is_diff?)) %>;
window.path = '<%= j @path -%>';

<% if @attachment %>
  var addReviewUrl = '<%= raw j new_code_review_url @project, action_type: 'attachment', attachment_id: @attachment.id %>';
<% else %>
  var addReviewUrl = '<%= raw j new_code_review_url @project, action_type: h(@action_type), change_id: @change.try(:id), rev: h(@rev), rev_to: h(@rev_to), repository_id: @repository.id, changeset_id: @changeset.id %>';
<% end %>

setAddReviewButton(addReviewUrl, '<%= j image_tag('edit.png', :alt => l(:label_add_review), :title => l(:label_add_review)) %>', is_readonly, is_diff);

window.showReviewImageTag = '<%= j image_tag('review.png', :plugin => 'redmine_code_review', :alt => l(:label_show_review), :title => l(:label_show_review)) %>';
window.showClosedReviewImageTag = '<%= j image_tag('closed_review.png', :plugin => 'redmine_code_review', :alt => l(:label_show_review), :title => l(:label_show_review)) %>';

<%
  if @change.nil? and @repository
    @file_indizes = RedmineCodeReview::DiffTable.new(@repository, @rev, @rev_to)
  end
%>
<% for review in @reviews do %>
  setShowReviewButton('<%= j code_review_url(@project, review) %>', <%= review.line %>, '<%= j review.id.to_s %>', <%= review.is_closed? %>, <%= @file_indizes ? @file_indizes[review.file_path] : 0 %> );
<% end %>

<% if @show_review -%>
  popupReview('<%= @show_review.id %>', '<%= j code_review_url(@project, @show_review) %>');
<% end -%>
$('#content table.filecontent:first').before($('#code-review-assign-link'));
